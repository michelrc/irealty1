<?php

/**
 * This is the model base class for the table "i18n_message".
 * It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "I18nMessage".
 * This code was improve iReevo Team
 * Columns in table "i18n_message" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $language
 * @property string $translation
 *
 * @property ImageARBehavior $imageAR
 */
abstract class BaseI18nMessage extends GxActiveRecord
{
    /**
     * Behaviors.
     * @return array
     */
    function behaviors()
    {
        return CMap::mergeArray(parent::behaviors(), array(

        ));
    }


    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public function tableName()
    {
        return 'i18n_message';
    }

    public static function label($n = 1)
    {
        return self::model()->t_model('I18nMessage|I18nMessages', $n);
    }

    public static function representingColumn()
    {
        return array(
            'id',
            'language',
        );
    }

    public function rules()
    {
        return array(
            array('id, language', 'required'),
            array('id', 'exist', 'className' => 'I18nSource', 'attributeName' => 'id'),
            array('language', 'exist', 'className' => 'Language', 'attributeName' => 'id'),
            array('translation', 'safe'),
            array('translation', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, language, translation', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
            'source' => array(self::BELONGS_TO, 'I18nSource', 'id'),
            'language' => array(self::BELONGS_TO, 'Language', 'language'),
        );
    }

    public function pivotModels()
    {
        return array();
    }

    public function scopes()
    {
        return array(
            'local' => array(
                'condition' => 'language = :lang',
                'params' => array(
                    ':lang' => Yii::app()->language
                )
            )
        );
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('i18n',''),
            'language' => Yii::t('i18n','Language'),
            'translation' => Yii::t('i18n','Translation'),
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('language', $this->language);
        $criteria->compare('translation', $this->translation, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}