<?php

/**
 * This is the model base class for the table "rent_list_page_general_info".
 * It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "RentListPageGeneralInfo".
 * This code was improve iReevo Team
 * Columns in table "rent_list_page_general_info" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $banner_title
 * @property string $page_title
 * @property integer $amount_products_per_page
 * @property string $bottom_image
 * @property string $popular_properties_tittle
 *
 * @property Date2TimeBehavior $date2time
 * @property CurrencyBehavior $currency
 * @property ImageARBehavior $imageAR

 */
abstract class BaseRentListPageGeneralInfo extends I18NInTableAdapter {

/* si tiene una imagen pa subir con ImageARBehavior, descomente la linea siguiente
// public $recipeImg;

    /**
    * Behaviors.
    * @return array
    */
    public $recipeImg1;
    function behaviors() {
        return CMap::mergeArray(parent::behaviors(), array(
                

                                '_bottom_image' => array(
                    'class' => 'ImageARBehavior',
                    'attribute' => 'recipeImg1', // this must exist
                    'extension' => 'jpg,gif,png', // possible extensions, comma separated
                    'prefix' => 'img1_',
                    'relativeWebRootFolder' => '/images/RentListPageGeneralInfo',
                    'formats' => array(
                    // create a thumbnail for used in the view datails
                    'thumb' => array(
                    'suffix' => '_thumb',
                    'process' => array('resize' => array(50, 50)),
                    ),
                    'normal' => array(
                    'suffix' => '_normal',

                                        'process' => array('resize' => array(1600,390, 1)),
                                        ),
                    // and override the default :
                    ),

                    'defaultName' => 'default', // when no file is associated, this one is used
                            // defaultName need to exist in the relativeWebRootFolder path, and prefixed by prefix,
                            // and with one of the possible extensions. if multiple formats are used, a default file must exist
                            // for each format. Name is constructed like this :
                            //     {prefix}{name of the default file}{suffix}{one of the extension}
                ),
                

                                'files' => array(
                     'class'=>'application.modules.ycm.behaviors.FileBehavior',
                ),
                'date2time' => array(
                    'class' => 'ycm.behaviors.Date2TimeBehavior',
                    'attributes'=>'',
                    'format'=>'Y-m-d',
                ),
                'datetime2time' => array(
                    'class' => 'ycm.behaviors.Date2TimeBehavior',
                    'attributes'=>'',
                    'format'=>'Y-m-d H:i:s',
                ),
                'currency' => array(
                    'class' => 'ycm.behaviors.CurrencyBehavior',
                    'attributes'=>'',
                ),
                            ));
    }


	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'rent_list_page_general_info';
	}

	public static function label($n = 1) {
		return self::model()->t_model('RentListPageGeneralInfo|RentListPageGeneralInfos', $n);
	}

	public static function representingColumn() {
		return 'banner_title';
	}

    public function i18nAttributes() {
        return array(
        'banner_title', 'page_title', 'popular_properties_tittle', );
    }

	public function rules() {
		return array(
			array('id, banner_title, amount_products_per_page, popular_properties_tittle', 'required'),
			array('amount_products_per_page', 'numerical', 'integerOnly'=>true),
			array('id', 'length', 'max'=>50),
			array('banner_title, page_title, bottom_image, popular_properties_tittle', 'length', 'max'=>255),
			array('page_title, bottom_image', 'default', 'setOnEmpty' => true, 'value' => null),
			array('banner_title, page_title, popular_properties_tittle', 'i18n.validators.I18NValidator', 'validate' => 'required'),

/* descomente las lineas siguientes si quiere subir una image con ImageARBehavior*/
    array('recipeImg1', 'file', 'on'=>'insert', 'allowEmpty'=>true, 'types'=>'jpg,jpeg,gif,png,JPG,GIF,JPEG,PNG', 'maxSize'=>1024*1024*6),
array('recipeImg1', 'file', 'on'=>'update', 'allowEmpty'=>true, 'types'=>'jpg,jpeg,gif,png,JPG,GIF,JPEG,PNG', 'maxSize'=>1024*1024*6),
array('recipeImg1', 'safe'),


			array('id, banner_title, page_title, amount_products_per_page, bottom_image, popular_properties_tittle', 'safe', 'on'=>'search'),
        		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => $this->t_label('ID'),
			'banner_title' => $this->t_label('Banner title'),
			'page_title' => $this->t_label('Page title'),
			'amount_products_per_page' => $this->t_label('Products per page'),
			'bottom_image' => $this->t_label('Bottom image Alt'),
			'popular_properties_tittle' => $this->t_label('Most popular title'),
    'recipeImg1' => $this->t_label('Bottom image'),

		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('banner_title', $this->banner_title, true);
		$criteria->compare('page_title', $this->page_title, true);
		$criteria->compare('amount_products_per_page', $this->amount_products_per_page);
		$criteria->compare('bottom_image', $this->bottom_image, true);
		$criteria->compare('popular_properties_tittle', $this->popular_properties_tittle, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
            		));
	}
}