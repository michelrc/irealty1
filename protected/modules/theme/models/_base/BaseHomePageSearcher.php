<?php

/**
 * This is the model base class for the table "home_page_searcher".
 * It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "HomePageSearcher".
 * This code was improve iReevo Team
 * Columns in table "home_page_searcher" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $title
 * @property string $tab_1_text
 * @property string $tab_2_text
 * @property string $place_holder_text
 *
 * @property Date2TimeBehavior $date2time
 * @property CurrencyBehavior $currency
 * @property ImageARBehavior $imageAR

 */
abstract class BaseHomePageSearcher extends I18NInTableAdapter {

/* si tiene una imagen pa subir con ImageARBehavior, descomente la linea siguiente
// public $recipeImg;

    /**
    * Behaviors.
    * @return array
    */
    function behaviors() {
        return CMap::mergeArray(parent::behaviors(), array(
                

                

                                'files' => array(
                     'class'=>'application.modules.ycm.behaviors.FileBehavior',
                ),
                'date2time' => array(
                    'class' => 'ycm.behaviors.Date2TimeBehavior',
                    'attributes'=>'',
                    'format'=>'Y-m-d',
                ),
                'datetime2time' => array(
                    'class' => 'ycm.behaviors.Date2TimeBehavior',
                    'attributes'=>'',
                    'format'=>'Y-m-d H:i:s',
                ),
                'currency' => array(
                    'class' => 'ycm.behaviors.CurrencyBehavior',
                    'attributes'=>'',
                ),
                            ));
    }


	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'home_page_searcher';
	}

	public static function label($n = 1) {
		return self::model()->t_model('HomePageSearcher|HomePageSearchers', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

    public function i18nAttributes() {
        return array(
        'title', 'tab_1_text', 'tab_2_text', 'place_holder_text', );
    }

	public function rules() {
		return array(
			array('id', 'required'),
			array('id', 'length', 'max'=>50),
			array('title, tab_1_text, tab_2_text, place_holder_text', 'length', 'max'=>250),
			array('title, tab_1_text, tab_2_text, place_holder_text', 'default', 'setOnEmpty' => true, 'value' => null),
			array('title, tab_1_text, tab_2_text, place_holder_text', 'i18n.validators.I18NValidator', 'validate' => 'required'),

/* descomente las lineas siguientes si quiere subir una image con ImageARBehavior*/


			array('id, title, tab_1_text, tab_2_text, place_holder_text', 'safe', 'on'=>'search'),
        		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => $this->t_label('ID'),
			'title' => $this->t_label('Title'),
			'tab_1_text' => $this->t_label('Tab 1 text'),
			'tab_2_text' => $this->t_label('Tab 2 text'),
			'place_holder_text' => $this->t_label('Place holder text'),

		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('tab_1_text', $this->tab_1_text, true);
		$criteria->compare('tab_2_text', $this->tab_2_text, true);
		$criteria->compare('place_holder_text', $this->place_holder_text, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
            		));
	}
}